{"ast":null,"code":"import { defineProperties } from \"../utils/index.js\";\n/**\r\n *  A Wordlist represents a collection of language-specific\r\n *  words used to encode and devoce [[link-bip-39]] encoded data\r\n *  by mapping words to 11-bit values and vice versa.\r\n */\nexport class Wordlist {\n  locale;\n  /**\r\n   *  Creates a new Wordlist instance.\r\n   *\r\n   *  Sub-classes MUST call this if they provide their own constructor,\r\n   *  passing in the locale string of the language.\r\n   *\r\n   *  Generally there is no need to create instances of a Wordlist,\r\n   *  since each language-specific Wordlist creates an instance and\r\n   *  there is no state kept internally, so they are safe to share.\r\n   */\n  constructor(locale) {\n    defineProperties(this, {\n      locale\n    });\n  }\n  /**\r\n   *  Sub-classes may override this to provide a language-specific\r\n   *  method for spliting %%phrase%% into individual words.\r\n   *\r\n   *  By default, %%phrase%% is split using any sequences of\r\n   *  white-space as defined by regular expressions (i.e. ``/\\s+/``).\r\n   */\n  split(phrase) {\n    return phrase.toLowerCase().split(/\\s+/g);\n  }\n  /**\r\n   *  Sub-classes may override this to provider a language-specific\r\n   *  method for joining %%words%% into a phrase.\r\n   *\r\n   *  By default, %%words%% are joined by a single space.\r\n   */\n  join(words) {\n    return words.join(\" \");\n  }\n}","map":{"version":3,"names":["defineProperties","Wordlist","locale","constructor","split","phrase","toLowerCase","join","words"],"sources":["C:\\Users\\patil\\OneDrive\\Desktop\\Hack4Good\\Supply-Chain\\supply-chain\\node_modules\\ethers\\src.ts\\wordlists\\wordlist.ts"],"sourcesContent":["import { defineProperties } from \"../utils/index.js\";\r\n\r\n/**\r\n *  A Wordlist represents a collection of language-specific\r\n *  words used to encode and devoce [[link-bip-39]] encoded data\r\n *  by mapping words to 11-bit values and vice versa.\r\n */\r\nexport abstract class Wordlist {\r\n    locale!: string;\r\n\r\n    /**\r\n     *  Creates a new Wordlist instance.\r\n     *\r\n     *  Sub-classes MUST call this if they provide their own constructor,\r\n     *  passing in the locale string of the language.\r\n     *\r\n     *  Generally there is no need to create instances of a Wordlist,\r\n     *  since each language-specific Wordlist creates an instance and\r\n     *  there is no state kept internally, so they are safe to share.\r\n     */\r\n    constructor(locale: string) {\r\n        defineProperties<Wordlist>(this, { locale });\r\n    }\r\n\r\n    /**\r\n     *  Sub-classes may override this to provide a language-specific\r\n     *  method for spliting %%phrase%% into individual words.\r\n     *\r\n     *  By default, %%phrase%% is split using any sequences of\r\n     *  white-space as defined by regular expressions (i.e. ``/\\s+/``).\r\n     */\r\n    split(phrase: string): Array<string> {\r\n        return phrase.toLowerCase().split(/\\s+/g)\r\n    }\r\n\r\n    /**\r\n     *  Sub-classes may override this to provider a language-specific\r\n     *  method for joining %%words%% into a phrase.\r\n     *\r\n     *  By default, %%words%% are joined by a single space.\r\n     */\r\n    join(words: Array<string>): string {\r\n        return words.join(\" \");\r\n    }\r\n\r\n    /**\r\n     *  Maps an 11-bit value into its coresponding word in the list.\r\n     *\r\n     *  Sub-classes MUST override this.\r\n     */\r\n    abstract getWord(index: number): string;\r\n\r\n    /**\r\n     *  Maps a word to its corresponding 11-bit value.\r\n     *\r\n     *  Sub-classes MUST override this.\r\n     */\r\n    abstract getWordIndex(word: string): number;\r\n}\r\n"],"mappings":"AAAA,SAASA,gBAAgB,QAAQ,mBAAmB;AAEpD;;;;;AAKA,OAAM,MAAgBC,QAAQ;EAC1BC,MAAM;EAEN;;;;;;;;;;EAUAC,YAAYD,MAAc;IACtBF,gBAAgB,CAAW,IAAI,EAAE;MAAEE;IAAM,CAAE,CAAC;EAChD;EAEA;;;;;;;EAOAE,KAAKA,CAACC,MAAc;IAChB,OAAOA,MAAM,CAACC,WAAW,EAAE,CAACF,KAAK,CAAC,MAAM,CAAC;EAC7C;EAEA;;;;;;EAMAG,IAAIA,CAACC,KAAoB;IACrB,OAAOA,KAAK,CAACD,IAAI,CAAC,GAAG,CAAC;EAC1B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}