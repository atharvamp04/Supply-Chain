{"ast":null,"code":"/**\r\n *  Each state-changing operation on Ethereum requires a transaction.\r\n *\r\n *  @_section api/transaction:Transactions  [about-transactions]\r\n */\nnull;\nexport { accessListify } from \"./accesslist.js\";\nexport { computeAddress, recoverAddress } from \"./address.js\";\nexport { Transaction } from \"./transaction.js\";","map":{"version":3,"names":["accessListify","computeAddress","recoverAddress","Transaction"],"sources":["C:\\Users\\patil\\OneDrive\\Desktop\\Hack4Good\\Supply-Chain\\supply-chain\\node_modules\\ethers\\src.ts\\transaction\\index.ts"],"sourcesContent":["/**\r\n *  Each state-changing operation on Ethereum requires a transaction.\r\n *\r\n *  @_section api/transaction:Transactions  [about-transactions]\r\n */\r\n\r\nnull;\r\n\r\n/**\r\n *  A single [[AccessList]] entry of storage keys (slots) for an address.\r\n */\r\nexport type AccessListEntry = { address: string, storageKeys: Array<string> };\r\n\r\n/**\r\n *  An ordered collection of [[AccessList]] entries.\r\n */\r\nexport type AccessList = Array<AccessListEntry>;\r\n\r\n/**\r\n *  Any ethers-supported access list structure.\r\n */\r\nexport type AccessListish = AccessList |\r\n                            Array<[ string, Array<string> ]> |\r\n                            Record<string, Array<string>>;\r\n\r\n\r\nexport { accessListify } from \"./accesslist.js\";\r\nexport { computeAddress, recoverAddress } from \"./address.js\";\r\nexport { Transaction } from \"./transaction.js\";\r\n\r\nexport type {\r\n    Blob, BlobLike, KzgLibrary, TransactionLike\r\n} from \"./transaction.js\";\r\n"],"mappings":"AAAA;;;;;AAMA,IAAI;AAoBJ,SAASA,aAAa,QAAQ,iBAAiB;AAC/C,SAASC,cAAc,EAAEC,cAAc,QAAQ,cAAc;AAC7D,SAASC,WAAW,QAAQ,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}